{"componentChunkName":"component---src-post-blog-post-js","path":"/4th-post/","result":{"data":{"site":{"siteMetadata":{"title":"Isy_Blog"}},"markdownRemark":{"id":"dc8bd9f7-48e6-57d7-a30c-67fe5fc36c88","excerpt":"APIs CreatePages 동적으로 페이지를 만드는 api이다. 이는 Initial 소싱후에만 불려지기 때문에 페리지를 생성하기위한 데이터를 쿼리할 수 있게된다. node API의 일종으로 매개변수로는 actions, graphql(Graph QL API)를 받는다. actions…","html":"<h1 id=\"apis\" style=\"position:relative;\"><a href=\"#apis\" aria-label=\"apis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>APIs</h1>\n<h3 id=\"createpages\" style=\"position:relative;\"><a href=\"#createpages\" aria-label=\"createpages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CreatePages</h3>\n<p>동적으로 페이지를 만드는 api이다.</p>\n<p>이는 Initial 소싱후에만 불려지기 때문에 페리지를 생성하기위한 데이터를 쿼리할 수 있게된다.</p>\n<p>node API의 일종으로 매개변수로는 actions, graphql(Graph QL API)를 받는다. actions는 Gatsby 내부적으로 사용되는 상태를 관리하기 위한 함수 set 이다. 이 중 하나인 createPage 함수는 생성할 페이지 URL과 템플릿 컴포넌트 경로, context를 인수로 받아 새로운 페이지를 생성한다.</p>\n<ul>\n<li>how to create?</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">path</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> graphql<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token keyword\">const</span> blogPostTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/templates/blog-post.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Query for markdown nodes to use in creating pages.</span>\n  <span class=\"token comment\">// You can query for whatever data you want to create pages for e.g.</span>\n  <span class=\"token comment\">// products, portfolio items, landing pages, etc.</span>\n  <span class=\"token comment\">// Variables can be added as the second function parameter</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      query loadPagesQuery($limit: Int!) {\n        allMarkdownRemark(limit: $limit) {\n          edges {\n            node {\n              frontmatter {\n                slug\n              }\n            }\n          }\n        }\n      }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">limit</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> result<span class=\"token punctuation\">.</span>errors\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Create blog post pages.</span>\n    result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Path for this page — required</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>edge<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>slug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> blogPostTemplate<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Add optional context data to be inserted</span>\n          <span class=\"token comment\">// as props into the page component.</span>\n          <span class=\"token comment\">//</span>\n          <span class=\"token comment\">// The context data can also be used as</span>\n          <span class=\"token comment\">// arguments to the page GraphQL query.</span>\n          <span class=\"token comment\">//</span>\n          <span class=\"token comment\">// The page \"path\" is always available as a GraphQL</span>\n          <span class=\"token comment\">// argument.</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"parameters\" style=\"position:relative;\"><a href=\"#parameters\" aria-label=\"parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameters</h3>\n<p>어떤 파라미터들을 넣을 수 있는지 자세히 알아보자</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#apis\">APIs</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#createpages\">CreatePages</a></li>\n<li><a href=\"#parameters\">Parameters</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"4th Post","date":"October 13, 2023","description":"Gatsby Blog"}},"previous":{"fields":{"slug":"/first_post/"},"frontmatter":{"title":"First Post"}},"next":null},"pageContext":{"id":"dc8bd9f7-48e6-57d7-a30c-67fe5fc36c88","toc":"<ul>\n<li>\n<p><a href=\"#apis\">APIs</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#createpages\">CreatePages</a></li>\n<li><a href=\"#parameters\">Parameters</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","previousPostId":"51ca1514-9616-5c07-91f7-f8bb5d4fde70","nextPostId":null}},"staticQueryHashes":["2841359383","3233389034","3257411868"],"slicesMap":{}}