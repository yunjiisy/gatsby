{"version":3,"file":"component---src-pages-using-typescript-tsx-60b3e3a4602cbea43d50.js","mappings":"qNAaA,MA+BaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACD,SACCN,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAAA,KAAAA,KAAI,0CACJA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,cAAe,oBACxD,0BAAI,cAAe,gBAAa,0BAAI,YAAa,UAEvDA,EAAAA,cAAAA,IAAAA,KAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECtCI,SAASC,IACtB,MAAMT,GAAOU,EAAAA,EAAAA,gBAAe,eAStB,MAAEZ,GAAUE,EAAKI,KAAKO,aAC5B,OACE,2BACE,0BAAKb,GACL,uBAAKc,UAAU,SACb,gBAAC,EAAAL,KAAI,CAACC,GAAG,WAAU,QACnB,gBAAC,EAAAD,KAAI,CAACC,GAAG,iBAAgB,SACzB,gBAAC,EAAAD,KAAI,CAACC,GAAG,oBAAmB,qBAC5B,gBAAC,EAAAD,KAAI,CAACC,GAAG,gBAAe,UAIhC,C,+ECrBe,SAASL,EAAO,GAAe,IAAf,SAAEU,GAAU,EACzC,OACE,uBAAKD,UAAU,UACb,gBAAC,IAAM,MACP,uBAAKA,UAAU,WAAWC,GAC1B,8BACE,yBAAG,mBAIX,C,+CCmCA,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEhB,EAAK,SAAEe,GAAU,EAC3C,MAAM,KAAET,IAASM,EAAAA,EAAAA,gBAAe,cAgB1BK,EAAkBD,GAAeV,EAAKO,aAAaG,YACnDE,EAAgC,QAApB,EAAGZ,EAAKO,oBAAY,aAAjB,EAAmBb,MAExC,OACE,gCACE,6BAAQkB,EAAkBlB,EAAK,MAAMkB,EAAiBlB,GACtD,wBAAMmB,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASpB,IACnC,wBAAMqB,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAd,EAAKO,oBAAY,OAAQ,QAAR,EAAjB,EAAmBS,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASpB,IACpC,wBAAMmB,KAAK,sBAAsBC,QAASH,IACzCF,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/NavBar.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nexport default function NavBar() {\n  const data = useStaticQuery(graphql`\n    query SiteInfo {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  const { title } = data.site.siteMetadata\n  return (\n    <nav>\n      <h1>{title}</h1>\n      <div className=\"links\">\n        <Link to=\"/gatsby\">Home</Link>\n        <Link to=\"/gatsby/about\">About</Link>\n        <Link to=\"/gatsby/projects\">Portfolio Project</Link>\n        <Link to=\"/gatsby/Blog\">Blog </Link>\n      </div>\n    </nav>\n  )\n}\n","import React from \"react\"\nimport NavBar from \"./NavBar\"\nimport \"../styles/global.css\"\n\nexport default function Layout({ children }) {\n  return (\n    <div className=\"layout\">\n      <NavBar />\n      <div className=\"content\">{children}</div>\n      <footer>\n        <p>Copyright 2023</p>\n      </footer>\n    </div>\n  )\n}\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","NavBar","useStaticQuery","siteMetadata","className","children","description","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}